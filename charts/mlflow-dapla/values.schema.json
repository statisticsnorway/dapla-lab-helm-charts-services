{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "service": {
      "description": "Service specific configuration",
      "type": "object",
      "properties": {
        "image": {
          "description": "image docker",
          "type": "object",
          "properties": {
            "pullPolicy": {
              "type": "string",
              "description": "option when pulling the docker image",
              "default": "IfNotPresent",
              "enum": [
                "IfNotPresent",
                "Always",
                "Never"
              ]
            },
            "version": {
              "description": "supported versions",
              "type": "string",
              "listEnum": [
                "inseefrlab/mlflow:v2.5.0",
                "inseefrlab/mlflow:v2.2.2"
              ],
              "render": "list",
              "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
              "default": "inseefrlab/mlflow:v2.2.2"
            }
          }
        }, 
        "directory": {
          "description": "directory of artifact root repository",
          "type": "string",
          "default": "/tmp/mlflow/artifacts/",
          "x-onyxia": {
            "overwriteDefaultWith": "s3://{{s3.AWS_BUCKET_NAME}}/mlflow-artifacts"
          }
        }
      }
    },
    "route": {
      "type": "object",
      "form": true,
      "title": "Route details",
      "properties": {
        "enabled": {
          "description": "Enable route",
          "type": "boolean",
          "default": false,
          "hidden": true,
          "x-onyxia": {
            "hidden": false,
            "overwriteDefaultWith": "k8s.route"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "hidden": true,
          "x-onyxia": {
            "hidden": false,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
          }
        }
      }
    },
    "security": {
      "description": "security specific configuration",
      "type": "object",
      "properties": {
        "allowlist": {
          "type": "object",
          "description": "IP protection",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable IP protection",
              "description": "Only the configured set of IPs will be able to reach the service",
              "default": true,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultIpProtection"
              }
            },
            "ip": {
              "type": "string",
              "description": "the white list of IP is whitespace",
              "title": "Whitelist of IP",
              "default": "0.0.0.0",
              "x-onyxia": {
                "overwriteDefaultWith": "{{user.ip}}"
              },
              "hidden": {
                "value": false,
                "path": "security/allowlist/enabled"
              }
            }
          }
        },
        "networkPolicy": {
          "type": "object",
          "description": "Define access policy to the service",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable network policy",
              "description": "Only pod from the same namespace will be allowed",
              "default": true,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultNetworkPolicy"
              }
            },
            "from": {
              "type": "array",
              "description": "Array of source allowed to have network access to your service",
              "default": [],
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.from"
              }
            }
          }
        }
      }
    },
    "serviceEntry": {
      "type": "object",
      "description": "Service entry to give access to external services",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable service entry",
          "description": "Enable access to external services",
          "default": true,
          "hidden": true
        },
        "hosts": {
          "type": "array",
          "description": "Array of hosts allowed to be accessed from your service",
          "default" : [
              "storage.googleapis.com"
          ],
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "istio": {
      "type": "object",
      "form": true,
      "title": "Ingress Details",
      "properties": {
          "enabled": {
              "description": "Enable istio ingress",
              "type": "boolean",
              "default": true,
              "x-onyxia": {
                  "hidden": true,
                  "overwriteDefaultWith": "k8s.istio.enabled"
              }
          },
          "gateways": {
              "description": "Path of istio ingress gateways to be used",
              "type": "array",
              "title": "Istio gateways",
              "x-onyxia": {
                  "hidden": true,
                  "overwriteDefaultWith": "k8s.istio.gateways"
              },

            "default": []
          },
          "hostname": {
              "type": "string",
              "form": true,
              "title": "Hostname",
              "x-onyxia": {
                  "hidden": true,
                  "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
              }
          }
      }
    },
    "resources": {
      "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Guaranteed resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The amount of cpu guaranteed",
              "title": "CPU",
              "type": "string",
              "default": "100m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "cpu"
            },
            "memory": {
              "description": "The amount of memory guaranteed",
              "title": "memory",
              "type": "string",
              "default": "2Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "memory"
            }
          }
        },
        "limits": {
          "description": "max resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The maximum amount of cpu",
              "title": "CPU",
              "type": "string",
              "default": "30000m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "cpu"
            },
            "memory": {
              "description": "The maximum amount of memory",
              "title": "Memory",
              "type": "string",
              "default": "50Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "memory"
            }
          }
        }
      }
    },
    "postgresql": {
      "description": "postgres specific configuration",
      "type": "object",
      "title": "Database",
      "properties": {
        "image": {
          "description": "image specific configuration",
          "type": "object",
          "properties": {
            "tag": {
              "description": "postgresql major version",
              "type": "string",
              "enum": [
                "12",
                "13",
                "14",
                "15"
              ],
              "default": "15"
            }
          }
        },
        "auth": {
          "description": "postgres specific configuration",
          "type": "object",
          "title": "Authentification",
          "properties": {
            "username": {
              "type": "string",
              "title": "User",
              "default": "user",
              "hidden": true,
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.id}}"
              }
            },
            "password": {
              "type": "string",
              "title": "User Password",
              "default": "changeme",
              "hidden": true,
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.password}}"
              }
            },
            "postgresPassword": {
              "type": "string",
              "title": "Admin Password",
              "default": "changeme",
              "hidden": true,
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.password}}"
              }
            },
            "database": {
              "description": "Name for the default database that is created when the image is first started.",
              "type": "string",
              "title": "Database",
              "default": "mlflow"
            }
          }
        }
      }
    }
  }
}